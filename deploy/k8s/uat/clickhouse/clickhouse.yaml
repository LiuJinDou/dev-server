apiVersion: "clickhouse.altinity.com/v1"
kind: "ClickHouseInstallation"
metadata:
  name: "test"
spec:
  # restart: "RollingUpdate"
  defaults:
    templates:
      podTemplate: clickhouse-test
      serviceTemplate: svc-plus-grpc
      dataVolumeClaimTemplate: data-storage-vc-template
      logVolumeClaimTemplate: log-storage-vc-template
  configuration:
    zookeeper:
      nodes:
      - host: chk-uco-bi-test
        port: 2181
    clusters:
      - name: uco-bi-test
        layout:
          shardsCount: 3
          replicasCount: 1
        # zookeeper:  
    files:
      users.d/97-profiles.xml: |
        <yandex>
          <profiles>
              <default>
                  <distributed_product_mode>global</distributed_product_mode>
                  <allow_experimental_database_replicated>1</allow_experimental_database_replicated>
                  <max_memory_usage>10000000000</max_memory_usage>
                  <use_uncompressed_cache>1</use_uncompressed_cache>
                  <load_balancing>in_order</load_balancing>
                  <log_queries>1</log_queries>
                  <allow_experimental_window_functions>1</allow_experimental_window_functions>
                  <allow_experimental_map_type>1</allow_experimental_map_type>
                  <distributed_ddl_task_timeout>600</distributed_ddl_task_timeout>
                  <join_use_nulls>1</join_use_nulls>
                  <max_execution_time>300</max_execution_time>
                  <max_rows_to_read>0</max_rows_to_read>
                  <flatten_nested>0</flatten_nested>
                  <output_format_json_named_tuples_as_objects>1</output_format_json_named_tuples_as_objects>
              </default>
              <ba>
                  <max_memory_usage>50000000000</max_memory_usage>
                  <max_execution_time>600</max_execution_time>
              </ba>
              <de>
                  <max_memory_usage>100000000000</max_memory_usage>
                  <max_bytes_before_external_group_by>20000000000</max_bytes_before_external_group_by>
                  <max_execution_time>800</max_execution_time>
              </de>
              <etl>
                  <max_memory_usage>300000000000</max_memory_usage>
                  <max_partitions_per_insert_block>1000</max_partitions_per_insert_block>
                  <max_bytes_before_external_group_by>30000000000</max_bytes_before_external_group_by>
                  <distributed_ddl_task_timeout>9000</distributed_ddl_task_timeout>
                  <max_execution_time>3600</max_execution_time>
              </etl>
          </profiles>
        </yandex>
      users.d/98-quotas.xml: |
        <yandex>
          <quotas>
              <default>
                  <interval>
                      <duration>3600</duration>
                      <queries>0</queries>
                      <errors>0</errors>
                      <result_rows>0</result_rows>
                      <read_rows>0</read_rows>
                      <execution_time>0</execution_time>
                  </interval>
              </default>
              <etl>
                  <interval>
                      <duration>3600</duration>
                      <queries>0</queries>
                      <errors>0</errors>
                      <result_rows>0</result_rows>
                      <read_rows>0</read_rows>
                      <execution_time>0</execution_time>
                  </interval>
              </etl>
          </quotas>
        </yandex>
      users.d/99-ldap_users.xml: |
        <yandex>
          <users>
            <fuchaojian>
                <access_management>1</access_management>
                <ldap>
                    <server>uco_ad_server</server>
                </ldap>
                <networks>
                    <ip>::/0</ip>
                </networks>
            </fuchaojian>
            <liujindou>
                <access_management>1</access_management>
                <ldap>
                    <server>uco_ad_server</server>
                </ldap>
                <networks>
                    <ip>::/0</ip>
                </networks>
            </liujindou>
            <dbt>
                <password>test123</password>
                <quota>etl</quota>
                <access_management>1</access_management>
                <profile>etl</profile>
                <networks>
                    <ip>::1</ip>
                    <ip>127.0.0.1</ip>
                    <ip>10.2.0.0/16</ip>
                </networks>
            </dbt>
          </users>
        </yandex>
    settings:
      grpc_port: 9100
      ldap_servers/uco_ad_server/host: uco.com
      ldap_servers/uco_ad_server/port: 389
      ldap_servers/uco_ad_server/bind_dn: uco\{user_name}
      ldap_servers/uco_ad_server/user_dn_detection/base_dn: OU=ebeauty,DC=uco,DC=com
      ldap_servers/uco_ad_server/user_dn_detection/search_filter: (&amp;(objectClass=user)(sAMAccountName={user_name}))
      ldap_servers/uco_ad_server/enable_tls: no
      jdbc_bridge/host: bi-infra-clickhouse-jdbc-bridge
      jdbc_bridge/port: 9019
      # kafka/ssl_ca_location: /opt/infra/root/ca.crt
      # kafka/ssl_certificate_location: /opt/infra/${USER_NAME}/user.crt
      # kafka/ssl_key_location: /opt/infra/${USER_NAME}/user.key
      # kafka/ssl_endpoint_identification_algorithm: none
      kafka/security_protocol: sasl_plaintext
      kafka/sasl_mechanisms: SCRAM-SHA-512
      kafka/sasl_username: clickhouse
      kafka/sasl_password: qVqdRPuz1zKZ
  templates:
    volumeClaimTemplates:
      - name: data-storage-vc-template
        reclaimPolicy: Retain
        spec:
          storageClassName: ceph-rbd-sc
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
      - name: log-storage-vc-template
        reclaimPolicy: Delete
        spec:
          storageClassName: ceph-rbd-sc
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi

    podTemplates:
      # Specify Pod Templates with affinity
      - name: clickhouse-test
        podDistribution:
          # - type: ShardAntiAffinity
          # - type: ReplicaAntiAffinity
          # - type: ClickHouseInstallationAffinity
          - type: ClickHouseAntiAffinity
          # - type: CircularReplication
          # - type: MaxNumberPerNode
          #   number: 3
          #   # Apply podDistribution on per-host basis
          #   topologyKey: "kubernetes.io/hostname"
            # Apply podDistribution on per-zone basis
            #topologyKey: "kubernetes.io/zone"
        spec:
          imagePullSecrets:
            - name: uco-gitlab
          # affinity:
          #   # Specify Pod affinity to nodes in specified availability zone
          #   nodeAffinity:
          #     requiredDuringSchedulingIgnoredDuringExecution:
          #       nodeSelectorTerms:
          #         - matchExpressions:
          #             - key: for
          #               operator: In
          #               values:
          #                 - test
          #   # Specify Pod anti-affinity to Pods with the same label "/app" on the same "hostname"
          #   podAntiAffinity:
          #     requiredDuringSchedulingIgnoredDuringExecution:
          #       - labelSelector:
          #           matchExpressions:
          #             - key: "clickhouse.altinity.com/app"
          #               operator: In
          #               values:
          #                 - "chop"
          #         topologyKey: "kubernetes.io/hostname"    
          volumes:
            - name: bi-infra-ca
              secret:
                secretName: bi-infra-cluster-ca-cert
            - name: bi-infra-kafka
              secret:
                secretName: clickhouse

          containers:
            - name: clickhouse-pod
              image: gitlab-registry.f.uco.com/p/it/big/uco-clickhouse-cluster/clickhouse/clickhouse-server:24.5.1
              volumeMounts:
                - name: bi-infra-ca
                  readOnly: true
                  mountPath: /opt/infra/root
                - name: bi-infra-kafka
                  readOnly: true
                  mountPath: /opt/infra/clickhouse
                - name: data-storage-vc-template
                  mountPath: /var/lib/clickhouse
                - name: log-storage-vc-template
                  mountPath: /var/log/clickhouse-server
              ports:
                - name: http
                  containerPort: 8123
                - name: tcp
                  containerPort: 9000
                - name: interserver
                  containerPort: 9009
                - name: grpc
                  containerPort: 9100
            
            - name: clickhouse-backup
              image: gitlab-registry.f.uco.com/p/it/big/uco-prefect/clickhouse/clickhouse-backup:2.5.13
              imagePullPolicy: IfNotPresent
              command:
                - bash
                - -xc
                - "/bin/clickhouse-backup server"
              env:
                - name: LOG_LEVEL
                  value: "debug"
                - name: ALLOW_EMPTY_BACKUPS
                  value: "true"
                - name: API_LISTEN
                  value: "0.0.0.0:7171"
               # require to avoid double scraping clickhouse and clickhouse-backup containers
              volumeMounts:
                - name:  data-storage-vc-template
                  mountPath: /var/lib/clickhouse
                - name: log-storage-vc-template
                  mountPath: /var/log/clickhouse-server
              ports:
                 - name: backup-rest
                   containerPort: 7171
    serviceTemplates:
      - name: svc-plus-grpc
        spec:
          ports:
            - name: http
              port: 8123
            - name: tcp
              port: 9000
            - name: interserver
              port: 9009
            - name: grpc
              port: 9100
          type: ClusterIP